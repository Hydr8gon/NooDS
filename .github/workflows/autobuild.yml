name: Automatic Builds

on: [push, pull_request]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Install Flatpak and SDK
      run: |
        sudo apt install flatpak flatpak-builder -y
        sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        sudo flatpak install flathub org.freedesktop.Platform//21.08 org.freedesktop.Sdk//21.08 -y
    - name: Checkout
      uses: actions/checkout@v1
    - name: Compile
      run: make flatpak
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: noods-linux
        path: noods.flatpak

  build-mac:
    runs-on: macos-latest

    steps:
    - name: Install wxWidgets and PortAudio
      run: brew install wxmac portaudio
    - name: Checkout
      uses: actions/checkout@v1
    - name: Compile
      run: |
        make -j$(sysctl -n hw.logicalcpu)
        ./mac-bundle.sh --dmg
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: noods-mac
        path: NooDS.dmg

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
    - name: Install build tools, wxWidgets, and PortAudio
      run: pacman -S mingw-w64-x86_64-{gcc,pkg-config,wxWidgets,portaudio,jbigkit} make --noconfirm
      shell: msys2 {0}
    - name: Compile
      run: |
        make -j$(nproc)
        strip noods.exe
      shell: msys2 {0}
      working-directory: ${{ github.workspace }}
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: noods-windows
        path: noods.exe

  build-switch:
    runs-on: ubuntu-latest
    container: devkitpro/devkita64:latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Compile
      run: make -f Makefile.switch -j$(nproc)
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: noods-switch
        path: noods.nro

  build-vita:
    runs-on: ubuntu-latest
    container: vitasdk/vitasdk:latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install make
      run: apk add make
    - name: Compile
      run: make -f Makefile.vita -j$(nproc)
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: noods-vita
        path: noods.vpk

  build-android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Compile
      run: |
        ./gradlew assembleRelease
        mv build-android/outputs/apk/release/android-release-unsigned.apk noods.apk
    - name: Sign
      if: github.repository_owner == 'Hydr8gon'
      run: $ANDROID_SDK_ROOT/build-tools/29.0.3/apksigner sign --ks keystore.jks --ks-pass pass:$KEYSTORE_PASS noods.apk
      env:
        KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: noods-android
        path: noods.apk

  update-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-windows, build-switch, build-vita, build-android]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

    steps:
    - name: Delete old release
      uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        delete_release: true
        tag_name: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Get artifacts
      uses: actions/download-artifact@v2
    - name: Package artifacts
      run: for i in ./*; do zip -r -j ${i}.zip $i; done
    - name: Create new release
      uses: ncipollo/release-action@v1
      with:
        name: Rolling Release
        body: These are automatically updated builds of the latest commit.
        artifacts: "*.zip"
        tag: release
        token: ${{ secrets.GITHUB_TOKEN }}
